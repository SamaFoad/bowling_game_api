# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: Ruby CI

on: [push, pull_request]

jobs:
  setup-ruby:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0
          bundler-cache: true

  setup-postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.18
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      # Ensure that the 'runs-on' field is properly aligned with the other fields
    steps:
      - name: Wait for PostgreSQL
        run: |
          until pg_isready; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

  install-dependencies:
    needs: [setup-ruby, setup-postgres]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PostgreSQL client
        run: sudo apt-get install libpq-dev
      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

  run-tests:
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: bundle exec rspec
      - name: Upload coverage for Sonarcloud
        uses: actions/upload-artifact@v3
        with:
          name: rspec_track
          path: ./coverage/.resultset.json

  rubocop:
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Cache RuboCop gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-rubocop-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-rubocop-
      - name: Rubocop
        run: bundle exec rubocop --parallel

  rubycritic:
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Cache RubyCritic gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-rubycritic-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-rubycritic-
      - name: Run Rubycritic
        run: |
          gem install reek -v 6.1.4 --no-document
          gem install rubycritic --no-document
          rubycritic

  fast_fail:
    needs: [rubocop, rubycritic]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Fail current workflow
        uses: andymckay/cancel-action@0.3
